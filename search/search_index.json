{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"IX Semana de la Inform\u00e1tica. Concurso/Taller Robotarium - FDI Bienvenidos al taller Robotarium - FDI y muchas gracias por colaborar en los primeros pasos de nuestro futuro robotarium . Recuerda que si quieres obtener ECTS por participar en actividades de la Seamana de la Inform\u00e1tica, debes inscribire en este formulario . si no lo has hecho ya. Estructura del Taller Este taller se compone de varias fases: Construcci\u00f3n del robot - En equipos de 3 personas, construir\u00e9is el robot y har\u00e9is que mueva sus ruedas. Recorrer una distancia - Programar\u00e9is el robot para que recorra una distancia predefinida. Hacer un c\u00edrculo - Programar\u00e9is el robot para que recorra un c\u00edrculo de 1m de radio. Hacer un cuadrado - Programar\u00e9is el robot para que recorra un cuadrado. \u00a1Cuidado con las esquinas! Fase 1: Construcci\u00f3n del Robot En esta primera etapa el objetivo es que mont\u00e9is el chasis del robot y realic\u00e9is todas las conexiones necesarias para que el robot pueda mover las ruedas. Para ello tendr\u00e9is que seguir los siguientes pasos: Montar el chasis con los motores, ruedas y rueda loca. Montar el sensor de odometr\u00eda para poder medir la distancia que recorre el robot. Conectar la alimentaci\u00f3n Conectar los motores con la placa de control y el Arduino Vamos paso a paso. Montar la el chasis rojo En la caja de cart\u00f3n tienes las piezas y torniller\u00eda necesarias para montar el chasis del robot. Sigue las instrucciones en papel que vienen en la caja. El \u00fanico paso que no figura en las instrucciones es la manera de colocar la rueda con agujeros que nos va a permitir detectar el movimiento de las ruedas usando el sensor de infrarrojos. Al final de este paso vuestro robot se tiene que parecer a este Montar el sensor de infrarrojos para la odometr\u00eda Ahora toca montar los sensores de infrarrojos que van a detectar los agujeros de la rueda de pl\u00e1stico y de esta manera se podr\u00e1n ir contando las vueltas que va dando cada una de las ruedas y as\u00ed estimar la distancia que recorre cada rueda del robot. Fijad los sensores con cinta de doble cara como se indica en las im\u00e1genes. Conectar la alimentaci\u00f3n Para alimentar toda la electr\u00f3nica necesitamos un regulador de tensi\u00f3n. A la entrada de este regulador se conecta la bater\u00eda y a la salida los pines de alimentaci\u00f3n del Arduino. Ajustar la tensi\u00f3n de salida Antes de conectar la salida del regulador a los pines de alimentaci\u00f3n del Arduino hay que ajustar el valor de voltaje de salida. Para ajustarlo se usa el potenci\u00f3metro azul de la placa hasta que midas con el mult\u00edmetro 8 voltios a la salida. Conectar la placa de control de los motores Para poder accionar los motores se usa una placa controladora con un puente en H. A esta placa es a la que se conectan los motores y las salidas de Arduino con las que vamos a controlarlos. Ya s\u00f3lo queda colocar el Arduino, el interruptor y conectar correctamente entre ellos todos los sistemas. Bater\u00eda Bater\u00eda + Interruptor Bater\u00eda - Regulador IN - Interruptor Interruptor 1 Bater\u00eda + Interruptor 2 Regulador IN + Regulador In + Interruptor 1 In - Bater\u00eda - Out + Puente en H VD Out - Puente en H GND Puente en H VD Regulador Out + GND Regulador Out - GND Arduino GND VS Arduino VIN E1 Arduino D2 M1 Arduino D3 E2 Arduino D4 M2 Arduino D5 M1+ Motor1 + M1- Motor1 - M2+ Motor2 + M2- Motor2 - Sensor Infrarrojo Derecho VCC Arduino Rst GND Arduino GND D0 Arduino D6 Sensor Infrarrojo Izquierdo VCC Arduino Rst GND Arduino GND D0 Arduino D7 Esto es un ejmplo de inclusi\u00f3n de una figura (puede ser .JPG, .PNG...) Ejemplo de c\u00f3digo if (a==b) turn_right(); else turn_left(); Cuadros de colores Cuesti\u00f3n \u00bfQu\u00e9 componente se est\u00e1 incluyendo adem\u00e1s de los que siempre se incluyen por defecto? \u00bfQu\u00e9 funcionalidad se importa de dicho componente? Tareas Crea dos nuevos componentes en el proyecto creado a partir del ejemplo. Uno de ellos tendr\u00e1 al menos una funci\u00f3n int get_hall_read() que proporcionar\u00e1 una lectura del sensor de efecto Hall. El otro tendr\u00e1 al menos una funci\u00f3n int get_temperature() que deolver\u00e1 la temperatura medida en grados Celsius obtenida del sensor Si7021. Los componentes podr\u00e1n tener m\u00e1s funciones, tanto p\u00fablicas como privadas. Antes de comenzar el REPL (que comienza con la llamada esp_console_start_repl() ) se deber\u00e1 mostrar por terminal una lectura de cada sensor.","title":"IX Semana Inform\u00e1tica"},{"location":"#ix-semana-de-la-informatica-concursotaller-robotarium-fdi","text":"Bienvenidos al taller Robotarium - FDI y muchas gracias por colaborar en los primeros pasos de nuestro futuro robotarium . Recuerda que si quieres obtener ECTS por participar en actividades de la Seamana de la Inform\u00e1tica, debes inscribire en este formulario . si no lo has hecho ya.","title":"IX Semana de la Inform\u00e1tica. Concurso/Taller Robotarium - FDI"},{"location":"#estructura-del-taller","text":"Este taller se compone de varias fases: Construcci\u00f3n del robot - En equipos de 3 personas, construir\u00e9is el robot y har\u00e9is que mueva sus ruedas. Recorrer una distancia - Programar\u00e9is el robot para que recorra una distancia predefinida. Hacer un c\u00edrculo - Programar\u00e9is el robot para que recorra un c\u00edrculo de 1m de radio. Hacer un cuadrado - Programar\u00e9is el robot para que recorra un cuadrado. \u00a1Cuidado con las esquinas!","title":"Estructura del Taller"},{"location":"#fase-1-construccion-del-robot","text":"En esta primera etapa el objetivo es que mont\u00e9is el chasis del robot y realic\u00e9is todas las conexiones necesarias para que el robot pueda mover las ruedas. Para ello tendr\u00e9is que seguir los siguientes pasos: Montar el chasis con los motores, ruedas y rueda loca. Montar el sensor de odometr\u00eda para poder medir la distancia que recorre el robot. Conectar la alimentaci\u00f3n Conectar los motores con la placa de control y el Arduino Vamos paso a paso.","title":"Fase 1: Construcci\u00f3n del Robot"},{"location":"#montar-la-el-chasis-rojo","text":"En la caja de cart\u00f3n tienes las piezas y torniller\u00eda necesarias para montar el chasis del robot. Sigue las instrucciones en papel que vienen en la caja. El \u00fanico paso que no figura en las instrucciones es la manera de colocar la rueda con agujeros que nos va a permitir detectar el movimiento de las ruedas usando el sensor de infrarrojos. Al final de este paso vuestro robot se tiene que parecer a este","title":"Montar la el chasis rojo"},{"location":"#montar-el-sensor-de-infrarrojos-para-la-odometria","text":"Ahora toca montar los sensores de infrarrojos que van a detectar los agujeros de la rueda de pl\u00e1stico y de esta manera se podr\u00e1n ir contando las vueltas que va dando cada una de las ruedas y as\u00ed estimar la distancia que recorre cada rueda del robot. Fijad los sensores con cinta de doble cara como se indica en las im\u00e1genes.","title":"Montar el sensor de infrarrojos para la odometr\u00eda"},{"location":"#conectar-la-alimentacion","text":"Para alimentar toda la electr\u00f3nica necesitamos un regulador de tensi\u00f3n. A la entrada de este regulador se conecta la bater\u00eda y a la salida los pines de alimentaci\u00f3n del Arduino. Ajustar la tensi\u00f3n de salida Antes de conectar la salida del regulador a los pines de alimentaci\u00f3n del Arduino hay que ajustar el valor de voltaje de salida. Para ajustarlo se usa el potenci\u00f3metro azul de la placa hasta que midas con el mult\u00edmetro 8 voltios a la salida.","title":"Conectar la alimentaci\u00f3n"},{"location":"#conectar-la-placa-de-control-de-los-motores","text":"Para poder accionar los motores se usa una placa controladora con un puente en H. A esta placa es a la que se conectan los motores y las salidas de Arduino con las que vamos a controlarlos. Ya s\u00f3lo queda colocar el Arduino, el interruptor y conectar correctamente entre ellos todos los sistemas. Bater\u00eda Bater\u00eda + Interruptor Bater\u00eda - Regulador IN - Interruptor Interruptor 1 Bater\u00eda + Interruptor 2 Regulador IN + Regulador In + Interruptor 1 In - Bater\u00eda - Out + Puente en H VD Out - Puente en H GND Puente en H VD Regulador Out + GND Regulador Out - GND Arduino GND VS Arduino VIN E1 Arduino D2 M1 Arduino D3 E2 Arduino D4 M2 Arduino D5 M1+ Motor1 + M1- Motor1 - M2+ Motor2 + M2- Motor2 - Sensor Infrarrojo Derecho VCC Arduino Rst GND Arduino GND D0 Arduino D6 Sensor Infrarrojo Izquierdo VCC Arduino Rst GND Arduino GND D0 Arduino D7 Esto es un ejmplo de inclusi\u00f3n de una figura (puede ser .JPG, .PNG...)","title":"Conectar la placa de control de los motores"},{"location":"#ejemplo-de-codigo","text":"if (a==b) turn_right(); else turn_left();","title":"Ejemplo de c\u00f3digo"},{"location":"#cuadros-de-colores","text":"Cuesti\u00f3n \u00bfQu\u00e9 componente se est\u00e1 incluyendo adem\u00e1s de los que siempre se incluyen por defecto? \u00bfQu\u00e9 funcionalidad se importa de dicho componente? Tareas Crea dos nuevos componentes en el proyecto creado a partir del ejemplo. Uno de ellos tendr\u00e1 al menos una funci\u00f3n int get_hall_read() que proporcionar\u00e1 una lectura del sensor de efecto Hall. El otro tendr\u00e1 al menos una funci\u00f3n int get_temperature() que deolver\u00e1 la temperatura medida en grados Celsius obtenida del sensor Si7021. Los componentes podr\u00e1n tener m\u00e1s funciones, tanto p\u00fablicas como privadas. Antes de comenzar el REPL (que comienza con la llamada esp_console_start_repl() ) se deber\u00e1 mostrar por terminal una lectura de cada sensor.","title":"Cuadros de colores"},{"location":"lib/python3.8/site-packages/Markdown-3.3.7.dist-info/LICENSE/","text":"Copyright 2007, 2008 The Python Markdown Project (v. 1.7 and later) Copyright 2004, 2005, 2006 Yuri Takhteyev (v. 0.2-1.6b) Copyright 2004 Manfred Stienstra (the original version) All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. Neither the name of the Python Markdown Project nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE PYTHON MARKDOWN PROJECT ''AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ANY CONTRIBUTORS TO THE PYTHON MARKDOWN PROJECT BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"LICENSE"}]}